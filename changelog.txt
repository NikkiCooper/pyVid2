28-May-2025	Added the very rough draft beginnings a of a true video playback bar with functional icons ETC.  Note
		that in this commit, the  playback bar is not functional.  That said, since it is semi-transparent,
		It overlays on top of the current text playback bar which remains functional.  There are issues with
		pygame.rect.collidepoint() functionality in the new class, and this is holding up development until
		the root cause is found. 


25-May-2025:    Fixed a major goof-up with pyVid2 resources.  The paths were
                Hardcoded.  Resources, which are found in the Resources directory,
	        are icons the application uses.  PyVids uses the following path
	        to find its resources:  $HOME/.local/share/pyVid.  Currently,
	        this directory tree consists of the following subdirs:

	        1. fonts           All application fonts
	        2. Resources       All Icons
	        3. thumbs          Thumbnail cache directory used by cachetools.LRUCache()

	        Added --aTrack which accepts an integer as a parameter.  This allows selection of a specific audio track
	        in a video if it has more than one.  Note this has very limited usefulness  and currently there is no
	        validation checking performed. If you select a track that does not exist, you will be greeted with a nice
	        black screen but no playing video. The default is 0.

                Added a video metadata class. It is envoked by pressing the 'i' key once a video is up and playing.
                This gives very basic video metadata along with a nice OK button to make it disappear.  This is very
                raw.  There is also a tooltip  on the videoname.ext (top line).  If the filename is too large,
                it will be truncated with an ellipsis (...) indicating as such.  However, hovering the mouse pointer
                over any part of the filename, will give you a nice pretty green background tooltip with black text.
                Wow!  Groovy baby!  This is all very rough alpha level. Expect using it to crash the program unexpectedly.
                Works for the most part (I guess).

                Pygame is a pain.  No wrappers or helper functions making it intutitive and easier to use. That means I must
	        start writing my own.  *sigh*.


My 7 year old daughter: "What cha doin' mommy?"
Me: "Writing a video playback program in Python :-)"  
Daughter: "Why?!??!"

My kid has a more of a clue than mommy. 

