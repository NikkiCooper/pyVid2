#!/bin/bash

###############################################################################
# 🎬 TitleTagger — Embed a Custom 'title' Metadata Tag into an MP4 File
#
# This script embeds a metadata title into a given MP4 file using ffmpeg.
# It creates a temporary file in /tmp, validates the tag, and replaces the
# original file only if the tag is confirmed. Cleanup is guaranteed.
#
# 💡 Usage:
#   ./TitleTagger.sh <filename.mp4> "<title-text>"
#
# 📌 Requirements:
#   - ffmpeg and ffprobe installed
#   - Input file must be an MP4 and writable
###############################################################################

filename="$1"
text="$2"
tempFile="/tmp/output_$$.mp4"  # ✅ Unique temporary file using PID

# 🧪 Argument and file existence checks
if [[ -z "$filename" || -z "$text" ]]; then
    echo "❌ ERROR: Missing arguments."
    echo "🔧 Usage: $0 <filename.mp4> \"<title-text>\""
    echo
    echo "📘 Adds a metadata 'title' to your MP4 file."
    exit 1
fi

if [[ ! -f "$filename" ]]; then
    echo "❌ ERROR: File not found: $filename"
    exit 1
fi

echo "🔧 Adding metadata: title=\"$text\" to $filename..."
ffmpeg -loglevel quiet -i "${filename}" -c copy -movflags use_metadata_tags \
    -metadata title="${text}" -y "$tempFile"

if [[ $? -ne 0 ]]; then
    echo "❌ ERROR: ffmpeg failed to process the file."
    rm -f "$tempFile"
    exit 1
fi

# 🧾 Verify metadata tag
addedTitle=$(ffprobe -show_format "$tempFile" -loglevel quiet | grep TAG:title | cut -d'=' -f2)

if [[ -z "$addedTitle" ]]; then
    echo "❌ ERROR: Metadata verification failed."
    echo "🚫 The original file remains unchanged."
else
    echo "✅ SUCCESS: Metadata tag verified!"
    echo "📄 Embedded Title: \"$addedTitle\""
    mv -f "$tempFile" "$filename"
    echo "🔍 Final confirmation:"
    ffprobe -show_format "$filename" -loglevel quiet | grep TAG:title | cut -d'=' -f2
fi

# 🧹 Cleanup
rm -f "$tempFile"
